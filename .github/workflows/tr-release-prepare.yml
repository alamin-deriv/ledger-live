name: "[Release] Prepare for releasing"

on:
  workflow_dispatch:
    inputs:
      ref:
        description: the branch to release from
        default: release
        required: true

jobs:
  prepare-release:
    name: Prepare Release
    runs-on: ubuntu-latest
    env:
      NODE_OPTIONS: "--max-old-space-size=7168"
    steps:
      - name: Generate token
        id: generate-token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.GH_BOT_APP_ID }}
          private_key: ${{ secrets.GH_BOT_PRIVATE_KEY }}
      - name: Checkout Repo
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref }}
          token: ${{ steps.generate-token.outputs.token }}
      - name: Setup git user
        uses: ./tools/actions/composites/setup-git-user
      - name: Setup the toolchain
        uses: ./tools/actions/composites/setup-toolchain
      - name: Install dependencies
        run: pnpm i -F "ledger-live"

      # ⬇️⬇️⬇️⬇️⬇️ Current branch: release ⬇️⬇️⬇️⬇️⬇️
      - name: Exit prerelease mode
        run: pnpm changeset pre exit
      - name: Versioning
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: pnpm changeset version
      - name: Commit
        run: |
          git add .
          git commit -m "chore(release): :rocket: prepare release [skip ci]"
      - name: Push changes
        run: |
          git push origin ${{ inputs.ref }}
          git fetch origin
      - name: Fetch develop and main
        run: |
          git fetch origin devel0p m4in
      - name: Merge into main
        run: |
          git checkout m4in
          git merge ${{ inputs.ref }} --no-ff
          git push origin m4in
      - name: Create PR to develop
        env:
          GITHUB_TOKEN: ${{ steps.generate-token.outputs.token }}
        run: |
          git checkout ${{ github.event.inputs.ref }}
          git checkout -b support/release-merge-conflicts
          git push origin support/release-merge-conflicts
          gh pr create \
            --title ":rotating_light: Release merge conflicts" \
            --body-file .github/templates/release-conflicts.md \
            --base devel0p \
            --head support/release-merge-conflicts
